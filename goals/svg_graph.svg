<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="629.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="41926532"><g><title>[anon] (921,472 samples, 2.20%)</title><rect x="0.0000%" y="565" width="2.1978%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="921472"/><text x="0.2500%" y="575.50">[..</text></g><g><title>[libfontconfig.so.1.15.0] (921,472 samples, 2.20%)</title><rect x="0.0000%" y="549" width="2.1978%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="921472"/><text x="0.2500%" y="559.50">[..</text></g><g><title>FcStrSetAdd (1,568,308 samples, 3.74%)</title><rect x="2.1978%" y="261" width="3.7406%" height="15" fill="rgb(221,193,54)" fg:x="921472" fg:w="1568308"/><text x="2.4478%" y="271.50">FcSt..</text></g><g><title>[libfontconfig.so.1.15.0] (1,568,308 samples, 3.74%)</title><rect x="2.1978%" y="245" width="3.7406%" height="15" fill="rgb(248,212,6)" fg:x="921472" fg:w="1568308"/><text x="2.4478%" y="255.50">[lib..</text></g><g><title>FcStrSetMember (1,568,308 samples, 3.74%)</title><rect x="2.1978%" y="229" width="3.7406%" height="15" fill="rgb(208,68,35)" fg:x="921472" fg:w="1568308"/><text x="2.4478%" y="239.50">FcSt..</text></g><g><title>[libexpat.so.1.10.2] (2,169,790 samples, 5.18%)</title><rect x="8.6973%" y="149" width="5.1752%" height="15" fill="rgb(232,128,0)" fg:x="3646480" fg:w="2169790"/><text x="8.9473%" y="159.50">[libex..</text></g><g><title>[libexpat.so.1.10.2] (520,367 samples, 1.24%)</title><rect x="12.6314%" y="133" width="1.2411%" height="15" fill="rgb(207,160,47)" fg:x="5295903" fg:w="520367"/><text x="12.8814%" y="143.50"></text></g><g><title>XML_ParseBuffer (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="405" width="14.8641%" height="15" fill="rgb(228,23,34)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="415.50">XML_ParseBuffer</text></g><g><title>[libexpat.so.1.10.2] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="389" width="14.8641%" height="15" fill="rgb(218,30,26)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="399.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="373" width="14.8641%" height="15" fill="rgb(220,122,19)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="383.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="357" width="14.8641%" height="15" fill="rgb(250,228,42)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="367.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="341" width="14.8641%" height="15" fill="rgb(240,193,28)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="351.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="325" width="14.8641%" height="15" fill="rgb(216,20,37)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="335.50">[libexpat.so.1.10.2]</text></g><g><title>[libfontconfig.so.1.15.0] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="309" width="14.8641%" height="15" fill="rgb(206,188,39)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="319.50">[libfontconfig.so.1.15...</text></g><g><title>[libfontconfig.so.1.15.0] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="293" width="14.8641%" height="15" fill="rgb(217,207,13)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="303.50">[libfontconfig.so.1.15...</text></g><g><title>[libfontconfig.so.1.15.0] (6,232,002 samples, 14.86%)</title><rect x="2.1978%" y="277" width="14.8641%" height="15" fill="rgb(231,73,38)" fg:x="921472" fg:w="6232002"/><text x="2.4478%" y="287.50">[libfontconfig.so.1.15...</text></g><g><title>[libfontconfig.so.1.15.0] (4,663,694 samples, 11.12%)</title><rect x="5.9384%" y="261" width="11.1235%" height="15" fill="rgb(225,20,46)" fg:x="2489780" fg:w="4663694"/><text x="6.1884%" y="271.50">[libfontconfig.s..</text></g><g><title>XML_ParseBuffer (4,663,694 samples, 11.12%)</title><rect x="5.9384%" y="245" width="11.1235%" height="15" fill="rgb(210,31,41)" fg:x="2489780" fg:w="4663694"/><text x="6.1884%" y="255.50">XML_ParseBuffer</text></g><g><title>[libexpat.so.1.10.2] (4,663,694 samples, 11.12%)</title><rect x="5.9384%" y="229" width="11.1235%" height="15" fill="rgb(221,200,47)" fg:x="2489780" fg:w="4663694"/><text x="6.1884%" y="239.50">[libexpat.so.1.1..</text></g><g><title>[libexpat.so.1.10.2] (4,008,498 samples, 9.56%)</title><rect x="7.5012%" y="213" width="9.5608%" height="15" fill="rgb(226,26,5)" fg:x="3144976" fg:w="4008498"/><text x="7.7512%" y="223.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.10.2] (4,008,498 samples, 9.56%)</title><rect x="7.5012%" y="197" width="9.5608%" height="15" fill="rgb(249,33,26)" fg:x="3144976" fg:w="4008498"/><text x="7.7512%" y="207.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.10.2] (4,008,498 samples, 9.56%)</title><rect x="7.5012%" y="181" width="9.5608%" height="15" fill="rgb(235,183,28)" fg:x="3144976" fg:w="4008498"/><text x="7.7512%" y="191.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.10.2] (4,008,498 samples, 9.56%)</title><rect x="7.5012%" y="165" width="9.5608%" height="15" fill="rgb(221,5,38)" fg:x="3144976" fg:w="4008498"/><text x="7.7512%" y="175.50">[libexpat.so.1..</text></g><g><title>[libfontconfig.so.1.15.0] (1,337,204 samples, 3.19%)</title><rect x="13.8725%" y="149" width="3.1894%" height="15" fill="rgb(247,18,42)" fg:x="5816270" fg:w="1337204"/><text x="14.1225%" y="159.50">[li..</text></g><g><title>[libfontconfig.so.1.15.0] (1,337,204 samples, 3.19%)</title><rect x="13.8725%" y="133" width="3.1894%" height="15" fill="rgb(241,131,45)" fg:x="5816270" fg:w="1337204"/><text x="14.1225%" y="143.50">[li..</text></g><g><title>[libexpat.so.1.10.2] (2,089,864 samples, 4.98%)</title><rect x="25.5503%" y="293" width="4.9846%" height="15" fill="rgb(249,31,29)" fg:x="10712337" fg:w="2089864"/><text x="25.8003%" y="303.50">[libex..</text></g><g><title>[libexpat.so.1.10.2] (4,055,211 samples, 9.67%)</title><rect x="25.5503%" y="325" width="9.6722%" height="15" fill="rgb(225,111,53)" fg:x="10712337" fg:w="4055211"/><text x="25.8003%" y="335.50">[libexpat.so.1..</text></g><g><title>[libexpat.so.1.10.2] (4,055,211 samples, 9.67%)</title><rect x="25.5503%" y="309" width="9.6722%" height="15" fill="rgb(238,160,17)" fg:x="10712337" fg:w="4055211"/><text x="25.8003%" y="319.50">[libexpat.so.1..</text></g><g><title>[libfontconfig.so.1.15.0] (1,965,347 samples, 4.69%)</title><rect x="30.5348%" y="293" width="4.6876%" height="15" fill="rgb(214,148,48)" fg:x="12802201" fg:w="1965347"/><text x="30.7848%" y="303.50">[libf..</text></g><g><title>[libfontconfig.so.1.15.0] (1,965,347 samples, 4.69%)</title><rect x="30.5348%" y="277" width="4.6876%" height="15" fill="rgb(232,36,49)" fg:x="12802201" fg:w="1965347"/><text x="30.7848%" y="287.50">[libf..</text></g><g><title>__strlen_avx2 (1,965,347 samples, 4.69%)</title><rect x="30.5348%" y="261" width="4.6876%" height="15" fill="rgb(209,103,24)" fg:x="12802201" fg:w="1965347"/><text x="30.7848%" y="271.50">__str..</text></g><g><title>[pango]_fontcon (16,791,369 samples, 40.05%)</title><rect x="0.0000%" y="581" width="40.0495%" height="15" fill="rgb(229,88,8)" fg:x="0" fg:w="16791369"/><text x="0.2500%" y="591.50">[pango]_fontcon</text></g><g><title>__GI___clone3 (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="565" width="37.8517%" height="15" fill="rgb(213,181,19)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="575.50">__GI___clone3</text></g><g><title>start_thread (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="549" width="37.8517%" height="15" fill="rgb(254,191,54)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="559.50">start_thread</text></g><g><title>[libglib-2.0.so.0.8400.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="533" width="37.8517%" height="15" fill="rgb(241,83,37)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="543.50">[libglib-2.0.so.0.8400.0]</text></g><g><title>[libpangoft2-1.0.so.0.5600.3] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="517" width="37.8517%" height="15" fill="rgb(233,36,39)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="527.50">[libpangoft2-1.0.so.0.5600.3]</text></g><g><title>[libfontconfig.so.1.15.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="501" width="37.8517%" height="15" fill="rgb(226,3,54)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="511.50">[libfontconfig.so.1.15.0]</text></g><g><title>[libfontconfig.so.1.15.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="485" width="37.8517%" height="15" fill="rgb(245,192,40)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="495.50">[libfontconfig.so.1.15.0]</text></g><g><title>FcInitLoadConfigAndFonts (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="469" width="37.8517%" height="15" fill="rgb(238,167,29)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="479.50">FcInitLoadConfigAndFonts</text></g><g><title>[libfontconfig.so.1.15.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="453" width="37.8517%" height="15" fill="rgb(232,182,51)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="463.50">[libfontconfig.so.1.15.0]</text></g><g><title>[libfontconfig.so.1.15.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="437" width="37.8517%" height="15" fill="rgb(231,60,39)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="447.50">[libfontconfig.so.1.15.0]</text></g><g><title>[libfontconfig.so.1.15.0] (15,869,897 samples, 37.85%)</title><rect x="2.1978%" y="421" width="37.8517%" height="15" fill="rgb(208,69,12)" fg:x="921472" fg:w="15869897"/><text x="2.4478%" y="431.50">[libfontconfig.so.1.15.0]</text></g><g><title>[libfontconfig.so.1.15.0] (9,637,895 samples, 22.99%)</title><rect x="17.0619%" y="405" width="22.9876%" height="15" fill="rgb(235,93,37)" fg:x="7153474" fg:w="9637895"/><text x="17.3119%" y="415.50">[libfontconfig.so.1.15.0]</text></g><g><title>XML_ParseBuffer (7,893,961 samples, 18.83%)</title><rect x="21.2214%" y="389" width="18.8281%" height="15" fill="rgb(213,116,39)" fg:x="8897408" fg:w="7893961"/><text x="21.4714%" y="399.50">XML_ParseBuffer</text></g><g><title>[libexpat.so.1.10.2] (7,893,961 samples, 18.83%)</title><rect x="21.2214%" y="373" width="18.8281%" height="15" fill="rgb(222,207,29)" fg:x="8897408" fg:w="7893961"/><text x="21.4714%" y="383.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,079,032 samples, 14.50%)</title><rect x="25.5503%" y="357" width="14.4992%" height="15" fill="rgb(206,96,30)" fg:x="10712337" fg:w="6079032"/><text x="25.8003%" y="367.50">[libexpat.so.1.10.2]</text></g><g><title>[libexpat.so.1.10.2] (6,079,032 samples, 14.50%)</title><rect x="25.5503%" y="341" width="14.4992%" height="15" fill="rgb(218,138,4)" fg:x="10712337" fg:w="6079032"/><text x="25.8003%" y="351.50">[libexpat.so.1.10.2]</text></g><g><title>[libfontconfig.so.1.15.0] (2,023,821 samples, 4.83%)</title><rect x="35.2224%" y="325" width="4.8271%" height="15" fill="rgb(250,191,14)" fg:x="14767548" fg:w="2023821"/><text x="35.4724%" y="335.50">[libfo..</text></g><g><title>__strcmp_avx2 (2,023,821 samples, 4.83%)</title><rect x="35.2224%" y="309" width="4.8271%" height="15" fill="rgb(239,60,40)" fg:x="14767548" fg:w="2023821"/><text x="35.4724%" y="319.50">__strc..</text></g><g><title>__pthread_getattr_np (501,504 samples, 1.20%)</title><rect x="40.0495%" y="485" width="1.1961%" height="15" fill="rgb(206,27,48)" fg:x="16791369" fg:w="501504"/><text x="40.2995%" y="495.50"></text></g><g><title>__GI___isoc23_sscanf (501,504 samples, 1.20%)</title><rect x="40.0495%" y="469" width="1.1961%" height="15" fill="rgb(225,35,8)" fg:x="16791369" fg:w="501504"/><text x="40.2995%" y="479.50"></text></g><g><title>__vfscanf_internal (501,504 samples, 1.20%)</title><rect x="40.0495%" y="453" width="1.1961%" height="15" fill="rgb(250,213,24)" fg:x="16791369" fg:w="501504"/><text x="40.2995%" y="463.50"></text></g><g><title>__GI_____strtoul_l_internal (501,504 samples, 1.20%)</title><rect x="40.0495%" y="437" width="1.1961%" height="15" fill="rgb(247,123,22)" fg:x="16791369" fg:w="501504"/><text x="40.2995%" y="447.50"></text></g><g><title>funcgraph (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="581" width="2.3923%" height="15" fill="rgb(231,138,38)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="591.50">fu..</text></g><g><title>_start (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="565" width="2.3923%" height="15" fill="rgb(231,145,46)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="575.50">_s..</text></g><g><title>__libc_start_main_impl (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="549" width="2.3923%" height="15" fill="rgb(251,118,11)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="559.50">__..</text></g><g><title>__libc_start_call_main (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="533" width="2.3923%" height="15" fill="rgb(217,147,25)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="543.50">__..</text></g><g><title>main (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="517" width="2.3923%" height="15" fill="rgb(247,81,37)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="527.50">ma..</text></g><g><title>std::rt::lang_start_internal (1,003,008 samples, 2.39%)</title><rect x="40.0495%" y="501" width="2.3923%" height="15" fill="rgb(209,12,38)" fg:x="16791369" fg:w="1003008"/><text x="40.2995%" y="511.50">st..</text></g><g><title>std::rt::lang_start::{{closure}} (501,504 samples, 1.20%)</title><rect x="41.2457%" y="485" width="1.1961%" height="15" fill="rgb(227,1,9)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="495.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (501,504 samples, 1.20%)</title><rect x="41.2457%" y="469" width="1.1961%" height="15" fill="rgb(248,47,43)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="479.50"></text></g><g><title>funcgraph::main (501,504 samples, 1.20%)</title><rect x="41.2457%" y="453" width="1.1961%" height="15" fill="rgb(221,10,30)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="463.50"></text></g><g><title>funcgraph::parser::builder::create_tree (501,504 samples, 1.20%)</title><rect x="41.2457%" y="437" width="1.1961%" height="15" fill="rgb(210,229,1)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="447.50"></text></g><g><title>funcgraph::parser::extractor::extract_structure (501,504 samples, 1.20%)</title><rect x="41.2457%" y="421" width="1.1961%" height="15" fill="rgb(222,148,37)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="431.50"></text></g><g><title>ts_node_child_by_field_name (501,504 samples, 1.20%)</title><rect x="41.2457%" y="405" width="1.1961%" height="15" fill="rgb(234,67,33)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="415.50"></text></g><g><title>ts_node_child_by_field_id (501,504 samples, 1.20%)</title><rect x="41.2457%" y="389" width="1.1961%" height="15" fill="rgb(247,98,35)" fg:x="17292873" fg:w="501504"/><text x="41.4957%" y="399.50"></text></g><g><title>[[heap]] (1,889,360 samples, 4.51%)</title><rect x="42.4418%" y="565" width="4.5064%" height="15" fill="rgb(247,138,52)" fg:x="17794377" fg:w="1889360"/><text x="42.6918%" y="575.50">[[hea..</text></g><g><title>[libharfbuzz.so.0.61121.0] (1,889,360 samples, 4.51%)</title><rect x="42.4418%" y="549" width="4.5064%" height="15" fill="rgb(213,79,30)" fg:x="17794377" fg:w="1889360"/><text x="42.6918%" y="559.50">[libh..</text></g><g><title>gvplugin_install (513,560 samples, 1.22%)</title><rect x="46.9482%" y="469" width="1.2249%" height="15" fill="rgb(246,177,23)" fg:x="19683737" fg:w="513560"/><text x="47.1982%" y="479.50"></text></g><g><title>__GI___strdup (513,560 samples, 1.22%)</title><rect x="46.9482%" y="453" width="1.2249%" height="15" fill="rgb(230,62,27)" fg:x="19683737" fg:w="513560"/><text x="47.1982%" y="463.50"></text></g><g><title>__strlen_avx2 (513,560 samples, 1.22%)</title><rect x="46.9482%" y="437" width="1.2249%" height="15" fill="rgb(216,154,8)" fg:x="19683737" fg:w="513560"/><text x="47.1982%" y="447.50"></text></g><g><title>_dl_map_object_deps (639,950 samples, 1.53%)</title><rect x="48.1731%" y="181" width="1.5264%" height="15" fill="rgb(244,35,45)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="191.50"></text></g><g><title>__GI__dl_catch_exception (639,950 samples, 1.53%)</title><rect x="48.1731%" y="165" width="1.5264%" height="15" fill="rgb(251,115,12)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="175.50"></text></g><g><title>openaux (639,950 samples, 1.53%)</title><rect x="48.1731%" y="149" width="1.5264%" height="15" fill="rgb(240,54,50)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="159.50"></text></g><g><title>_dl_map_object (639,950 samples, 1.53%)</title><rect x="48.1731%" y="133" width="1.5264%" height="15" fill="rgb(233,84,52)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="143.50"></text></g><g><title>_dl_load_cache_lookup (639,950 samples, 1.53%)</title><rect x="48.1731%" y="117" width="1.5264%" height="15" fill="rgb(207,117,47)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="127.50"></text></g><g><title>search_cache (639,950 samples, 1.53%)</title><rect x="48.1731%" y="101" width="1.5264%" height="15" fill="rgb(249,43,39)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="111.50"></text></g><g><title>_dl_cache_libcmp (639,950 samples, 1.53%)</title><rect x="48.1731%" y="85" width="1.5264%" height="15" fill="rgb(209,38,44)" fg:x="20197297" fg:w="639950"/><text x="48.4231%" y="95.50"></text></g><g><title>elf_machine_rela (9,335,550 samples, 22.27%)</title><rect x="49.6994%" y="117" width="22.2664%" height="15" fill="rgb(236,212,23)" fg:x="20837247" fg:w="9335550"/><text x="49.9494%" y="127.50">elf_machine_rela</text></g><g><title>resolve_map (9,335,550 samples, 22.27%)</title><rect x="49.6994%" y="101" width="22.2664%" height="15" fill="rgb(242,79,21)" fg:x="20837247" fg:w="9335550"/><text x="49.9494%" y="111.50">resolve_map</text></g><g><title>_dl_lookup_symbol_x (9,335,550 samples, 22.27%)</title><rect x="49.6994%" y="85" width="22.2664%" height="15" fill="rgb(211,96,35)" fg:x="20837247" fg:w="9335550"/><text x="49.9494%" y="95.50">_dl_lookup_symbol_x</text></g><g><title>do_lookup_x (9,335,550 samples, 22.27%)</title><rect x="49.6994%" y="69" width="22.2664%" height="15" fill="rgb(253,215,40)" fg:x="20837247" fg:w="9335550"/><text x="49.9494%" y="79.50">do_lookup_x</text></g><g><title>check_match (2,625,871 samples, 6.26%)</title><rect x="65.7028%" y="53" width="6.2630%" height="15" fill="rgb(211,81,21)" fg:x="27546926" fg:w="2625871"/><text x="65.9528%" y="63.50">check_ma..</text></g><g><title>strcmp (615,570 samples, 1.47%)</title><rect x="70.4977%" y="37" width="1.4682%" height="15" fill="rgb(208,190,38)" fg:x="29557227" fg:w="615570"/><text x="70.7477%" y="47.50"></text></g><g><title>gvContextPlugins (12,058,742 samples, 28.76%)</title><rect x="46.9482%" y="501" width="28.7616%" height="15" fill="rgb(235,213,38)" fg:x="19683737" fg:w="12058742"/><text x="47.1982%" y="511.50">gvContextPlugins</text></g><g><title>gvconfig (12,058,742 samples, 28.76%)</title><rect x="46.9482%" y="485" width="28.7616%" height="15" fill="rgb(237,122,38)" fg:x="19683737" fg:w="12058742"/><text x="47.1982%" y="495.50">gvconfig</text></g><g><title>gvtextlayout_select (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="469" width="27.5367%" height="15" fill="rgb(244,218,35)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="479.50">gvtextlayout_select</text></g><g><title>gvplugin_load (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="453" width="27.5367%" height="15" fill="rgb(240,68,47)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="463.50">gvplugin_load</text></g><g><title>gvplugin_library_load (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="437" width="27.5367%" height="15" fill="rgb(210,16,53)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="447.50">gvplugin_library_load</text></g><g><title>lt_dlopenadvise (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="421" width="27.5367%" height="15" fill="rgb(235,124,12)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="431.50">lt_dlopenadvise</text></g><g><title>[libltdl.so.7.3.2] (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="405" width="27.5367%" height="15" fill="rgb(224,169,11)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="415.50">[libltdl.so.7.3.2]</text></g><g><title>[libltdl.so.7.3.2] (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="389" width="27.5367%" height="15" fill="rgb(250,166,2)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="399.50">[libltdl.so.7.3.2]</text></g><g><title>[libltdl.so.7.3.2] (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="373" width="27.5367%" height="15" fill="rgb(242,216,29)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="383.50">[libltdl.so.7.3.2]</text></g><g><title>___dlopen (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="357" width="27.5367%" height="15" fill="rgb(230,116,27)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="367.50">___dlopen</text></g><g><title>dlopen_implementation (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="341" width="27.5367%" height="15" fill="rgb(228,99,48)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="351.50">dlopen_implementation</text></g><g><title>_dlerror_run (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="325" width="27.5367%" height="15" fill="rgb(253,11,6)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="335.50">_dlerror_run</text></g><g><title>_dl_catch_error (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="309" width="27.5367%" height="15" fill="rgb(247,143,39)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="319.50">_dl_catch_error</text></g><g><title>__GI__dl_catch_exception (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="293" width="27.5367%" height="15" fill="rgb(236,97,10)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="303.50">__GI__dl_catch_exception</text></g><g><title>dlopen_doit (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="277" width="27.5367%" height="15" fill="rgb(233,208,19)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="287.50">dlopen_doit</text></g><g><title>_dl_open (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="261" width="27.5367%" height="15" fill="rgb(216,164,2)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="271.50">_dl_open</text></g><g><title>__GI__dl_catch_exception (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="245" width="27.5367%" height="15" fill="rgb(220,129,5)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="255.50">__GI__dl_catch_exception</text></g><g><title>dl_open_worker (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="229" width="27.5367%" height="15" fill="rgb(242,17,10)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="239.50">dl_open_worker</text></g><g><title>__GI__dl_catch_exception (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="213" width="27.5367%" height="15" fill="rgb(242,107,0)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="223.50">__GI__dl_catch_exception</text></g><g><title>dl_open_worker_begin (11,545,182 samples, 27.54%)</title><rect x="48.1731%" y="197" width="27.5367%" height="15" fill="rgb(251,28,31)" fg:x="20197297" fg:w="11545182"/><text x="48.4231%" y="207.50">dl_open_worker_begin</text></g><g><title>_dl_open_relocate_one_object (10,905,232 samples, 26.01%)</title><rect x="49.6994%" y="181" width="26.0103%" height="15" fill="rgb(233,223,10)" fg:x="20837247" fg:w="10905232"/><text x="49.9494%" y="191.50">_dl_open_relocate_one_object</text></g><g><title>_dl_relocate_object (10,905,232 samples, 26.01%)</title><rect x="49.6994%" y="165" width="26.0103%" height="15" fill="rgb(215,21,27)" fg:x="20837247" fg:w="10905232"/><text x="49.9494%" y="175.50">_dl_relocate_object</text></g><g><title>_dl_relocate_object_no_relro (10,905,232 samples, 26.01%)</title><rect x="49.6994%" y="149" width="26.0103%" height="15" fill="rgb(232,23,21)" fg:x="20837247" fg:w="10905232"/><text x="49.9494%" y="159.50">_dl_relocate_object_no_relro</text></g><g><title>elf_dynamic_do_Rela (10,905,232 samples, 26.01%)</title><rect x="49.6994%" y="133" width="26.0103%" height="15" fill="rgb(244,5,23)" fg:x="20837247" fg:w="10905232"/><text x="49.9494%" y="143.50">elf_dynamic_do_Rela</text></g><g><title>elf_machine_rela_relative (1,569,682 samples, 3.74%)</title><rect x="71.9659%" y="117" width="3.7439%" height="15" fill="rgb(226,81,46)" fg:x="30172797" fg:w="1569682"/><text x="72.2159%" y="127.50">elf_..</text></g><g><title>gvLayoutJobs (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="501" width="4.3519%" height="15" fill="rgb(247,70,30)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="511.50">gvLay..</text></g><g><title>neato_layout (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="485" width="4.3519%" height="15" fill="rgb(212,68,19)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="495.50">neato..</text></g><g><title>removeOverlapWith (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="469" width="4.3519%" height="15" fill="rgb(240,187,13)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="479.50">remov..</text></g><g><title>remove_overlap (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="453" width="4.3519%" height="15" fill="rgb(223,113,26)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="463.50">remov..</text></g><g><title>OverlapSmoother_new (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="437" width="4.3519%" height="15" fill="rgb(206,192,2)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="447.50">Overl..</text></g><g><title>[libgvplugin_neato_layout.so.8.0.0] (1,824,615 samples, 4.35%)</title><rect x="75.7098%" y="421" width="4.3519%" height="15" fill="rgb(241,108,4)" fg:x="31742479" fg:w="1824615"/><text x="75.9598%" y="431.50">[libg..</text></g><g><title>_dl_init (2,005,641 samples, 4.78%)</title><rect x="80.0617%" y="197" width="4.7837%" height="15" fill="rgb(247,173,49)" fg:x="33567094" fg:w="2005641"/><text x="80.3117%" y="207.50">_dl_in..</text></g><g><title>call_init (2,005,641 samples, 4.78%)</title><rect x="80.0617%" y="181" width="4.7837%" height="15" fill="rgb(224,114,35)" fg:x="33567094" fg:w="2005641"/><text x="80.3117%" y="191.50">call_i..</text></g><g><title>call_init (2,005,641 samples, 4.78%)</title><rect x="80.0617%" y="165" width="4.7837%" height="15" fill="rgb(245,159,27)" fg:x="33567094" fg:w="2005641"/><text x="80.3117%" y="175.50">call_i..</text></g><g><title>[libstdc++.so.6.0.33] (2,005,641 samples, 4.78%)</title><rect x="80.0617%" y="149" width="4.7837%" height="15" fill="rgb(245,172,44)" fg:x="33567094" fg:w="2005641"/><text x="80.3117%" y="159.50">[libst..</text></g><g><title>[dot] (19,783,638 samples, 47.19%)</title><rect x="46.9482%" y="565" width="47.1864%" height="15" fill="rgb(236,23,11)" fg:x="19683737" fg:w="19783638"/><text x="47.1982%" y="575.50">[dot]</text></g><g><title>__libc_start_main_impl (19,783,638 samples, 47.19%)</title><rect x="46.9482%" y="549" width="47.1864%" height="15" fill="rgb(205,117,38)" fg:x="19683737" fg:w="19783638"/><text x="47.1982%" y="559.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (19,783,638 samples, 47.19%)</title><rect x="46.9482%" y="533" width="47.1864%" height="15" fill="rgb(237,72,25)" fg:x="19683737" fg:w="19783638"/><text x="47.1982%" y="543.50">__libc_start_call_main</text></g><g><title>[dot] (19,783,638 samples, 47.19%)</title><rect x="46.9482%" y="517" width="47.1864%" height="15" fill="rgb(244,70,9)" fg:x="19683737" fg:w="19783638"/><text x="47.1982%" y="527.50">[dot]</text></g><g><title>gvParseArgs (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="501" width="14.0729%" height="15" fill="rgb(217,125,39)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="511.50">gvParseArgs</text></g><g><title>dotneato_args_initialize (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="485" width="14.0729%" height="15" fill="rgb(235,36,10)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="495.50">dotneato_args_initial..</text></g><g><title>gvlayout_select (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="469" width="14.0729%" height="15" fill="rgb(251,123,47)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="479.50">gvlayout_select</text></g><g><title>gvplugin_load (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="453" width="14.0729%" height="15" fill="rgb(221,13,13)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="463.50">gvplugin_load</text></g><g><title>gvplugin_library_load (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="437" width="14.0729%" height="15" fill="rgb(238,131,9)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="447.50">gvplugin_library_load</text></g><g><title>lt_dlopenadvise (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="421" width="14.0729%" height="15" fill="rgb(211,50,8)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="431.50">lt_dlopenadvise</text></g><g><title>[libltdl.so.7.3.2] (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="405" width="14.0729%" height="15" fill="rgb(245,182,24)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="415.50">[libltdl.so.7.3.2]</text></g><g><title>[libltdl.so.7.3.2] (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="389" width="14.0729%" height="15" fill="rgb(242,14,37)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="399.50">[libltdl.so.7.3.2]</text></g><g><title>[libltdl.so.7.3.2] (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="373" width="14.0729%" height="15" fill="rgb(246,228,12)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="383.50">[libltdl.so.7.3.2]</text></g><g><title>___dlopen (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="357" width="14.0729%" height="15" fill="rgb(213,55,15)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="367.50">___dlopen</text></g><g><title>dlopen_implementation (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="341" width="14.0729%" height="15" fill="rgb(209,9,3)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="351.50">dlopen_implementation</text></g><g><title>_dlerror_run (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="325" width="14.0729%" height="15" fill="rgb(230,59,30)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="335.50">_dlerror_run</text></g><g><title>_dl_catch_error (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="309" width="14.0729%" height="15" fill="rgb(209,121,21)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="319.50">_dl_catch_error</text></g><g><title>__GI__dl_catch_exception (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="293" width="14.0729%" height="15" fill="rgb(220,109,13)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="303.50">__GI__dl_catch_except..</text></g><g><title>dlopen_doit (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="277" width="14.0729%" height="15" fill="rgb(232,18,1)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="287.50">dlopen_doit</text></g><g><title>_dl_open (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="261" width="14.0729%" height="15" fill="rgb(215,41,42)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="271.50">_dl_open</text></g><g><title>__GI__dl_catch_exception (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="245" width="14.0729%" height="15" fill="rgb(224,123,36)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="255.50">__GI__dl_catch_except..</text></g><g><title>dl_open_worker (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="229" width="14.0729%" height="15" fill="rgb(240,125,3)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="239.50">dl_open_worker</text></g><g><title>__GI__dl_catch_exception (5,900,281 samples, 14.07%)</title><rect x="80.0617%" y="213" width="14.0729%" height="15" fill="rgb(205,98,50)" fg:x="33567094" fg:w="5900281"/><text x="80.3117%" y="223.50">__GI__dl_catch_except..</text></g><g><title>dl_open_worker_begin (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="197" width="9.2892%" height="15" fill="rgb(205,185,37)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="207.50">dl_open_worke..</text></g><g><title>_dl_open_relocate_one_object (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="181" width="9.2892%" height="15" fill="rgb(238,207,15)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="191.50">_dl_open_relo..</text></g><g><title>_dl_relocate_object (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="165" width="9.2892%" height="15" fill="rgb(213,199,42)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="175.50">_dl_relocate_..</text></g><g><title>_dl_relocate_object_no_relro (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="149" width="9.2892%" height="15" fill="rgb(235,201,11)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="159.50">_dl_relocate_..</text></g><g><title>elf_dynamic_do_Rela (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="133" width="9.2892%" height="15" fill="rgb(207,46,11)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="143.50">elf_dynamic_d..</text></g><g><title>elf_machine_rela (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="117" width="9.2892%" height="15" fill="rgb(241,35,35)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="127.50">elf_machine_r..</text></g><g><title>resolve_map (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="101" width="9.2892%" height="15" fill="rgb(243,32,47)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="111.50">resolve_map</text></g><g><title>_dl_lookup_symbol_x (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="85" width="9.2892%" height="15" fill="rgb(247,202,23)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="95.50">_dl_lookup_sy..</text></g><g><title>do_lookup_x (3,894,640 samples, 9.29%)</title><rect x="84.8454%" y="69" width="9.2892%" height="15" fill="rgb(219,102,11)" fg:x="35572735" fg:w="3894640"/><text x="85.0954%" y="79.50">do_lookup_x</text></g><g><title>__strcmp_avx2 (1,957,653 samples, 4.67%)</title><rect x="94.1346%" y="565" width="4.6692%" height="15" fill="rgb(243,110,44)" fg:x="39467375" fg:w="1957653"/><text x="94.3846%" y="575.50">__str..</text></g><g><title>all (41,926,532 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(222,74,54)" fg:x="0" fg:w="41926532"/><text x="0.2500%" y="607.50"></text></g><g><title>neato (24,132,155 samples, 57.56%)</title><rect x="42.4418%" y="581" width="57.5582%" height="15" fill="rgb(216,99,12)" fg:x="17794377" fg:w="24132155"/><text x="42.6918%" y="591.50">neato</text></g><g><title>_start (501,504 samples, 1.20%)</title><rect x="98.8039%" y="565" width="1.1961%" height="15" fill="rgb(226,22,26)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="575.50"></text></g><g><title>_dl_start (501,504 samples, 1.20%)</title><rect x="98.8039%" y="549" width="1.1961%" height="15" fill="rgb(217,163,10)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="559.50"></text></g><g><title>_dl_start_final (501,504 samples, 1.20%)</title><rect x="98.8039%" y="533" width="1.1961%" height="15" fill="rgb(213,25,53)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="543.50"></text></g><g><title>_dl_sysdep_start (501,504 samples, 1.20%)</title><rect x="98.8039%" y="517" width="1.1961%" height="15" fill="rgb(252,105,26)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="527.50"></text></g><g><title>dl_main (501,504 samples, 1.20%)</title><rect x="98.8039%" y="501" width="1.1961%" height="15" fill="rgb(220,39,43)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="511.50"></text></g><g><title>_dl_relocate_object (501,504 samples, 1.20%)</title><rect x="98.8039%" y="485" width="1.1961%" height="15" fill="rgb(229,68,48)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="495.50"></text></g><g><title>_dl_relocate_object_no_relro (501,504 samples, 1.20%)</title><rect x="98.8039%" y="469" width="1.1961%" height="15" fill="rgb(252,8,32)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="479.50"></text></g><g><title>elf_dynamic_do_Rela (501,504 samples, 1.20%)</title><rect x="98.8039%" y="453" width="1.1961%" height="15" fill="rgb(223,20,43)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="463.50"></text></g><g><title>elf_machine_rela (501,504 samples, 1.20%)</title><rect x="98.8039%" y="437" width="1.1961%" height="15" fill="rgb(229,81,49)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="447.50"></text></g><g><title>resolve_map (501,504 samples, 1.20%)</title><rect x="98.8039%" y="421" width="1.1961%" height="15" fill="rgb(236,28,36)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="431.50"></text></g><g><title>_dl_lookup_symbol_x (501,504 samples, 1.20%)</title><rect x="98.8039%" y="405" width="1.1961%" height="15" fill="rgb(249,185,26)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="415.50"></text></g><g><title>do_lookup_x (501,504 samples, 1.20%)</title><rect x="98.8039%" y="389" width="1.1961%" height="15" fill="rgb(249,174,33)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="399.50"></text></g><g><title>check_match (501,504 samples, 1.20%)</title><rect x="98.8039%" y="373" width="1.1961%" height="15" fill="rgb(233,201,37)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="383.50"></text></g><g><title>strcmp (501,504 samples, 1.20%)</title><rect x="98.8039%" y="357" width="1.1961%" height="15" fill="rgb(221,78,26)" fg:x="41425028" fg:w="501504"/><text x="99.0539%" y="367.50"></text></g></svg></svg>